// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file arian/v1/transaction.proto (package arian.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Category } from "./category_pb";
import { file_arian_v1_category } from "./category_pb";
import type { CategorizationStatus, TransactionDirection } from "./enums_pb";
import { file_arian_v1_enums } from "./enums_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Money } from "../../google/type/money_pb";
import { file_google_type_money } from "../../google/type/money_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file arian/v1/transaction.proto.
 */
export const file_arian_v1_transaction: GenFile = /*@__PURE__*/
  fileDesc("Chphcmlhbi92MS90cmFuc2FjdGlvbi5wcm90bxIIYXJpYW4udjEi7AYKC1RyYW5zYWN0aW9uEgoKAmlkGAEgASgDEisKB3R4X2RhdGUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiUKCXR4X2Ftb3VudBgDIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5EjEKCWRpcmVjdGlvbhgEIAEoDjIeLmFyaWFuLnYxLlRyYW5zYWN0aW9uRGlyZWN0aW9uEhIKCmFjY291bnRfaWQYBSABKAMSFQoIZW1haWxfaWQYBiABKAlIAIgBARIYCgtkZXNjcmlwdGlvbhgHIAEoCUgBiAEBEhgKC2NhdGVnb3J5X2lkGAkgASgDSAKIAQESPQoVY2F0ZWdvcml6YXRpb25fc3RhdHVzGAogASgOMh4uYXJpYW4udjEuQ2F0ZWdvcml6YXRpb25TdGF0dXMSFQoIbWVyY2hhbnQYCyABKAlIA4gBARIXCgp1c2VyX25vdGVzGAwgASgJSASIAQESLgoNYmFsYW5jZV9hZnRlchgNIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5SAWIAQESEwoLc3VnZ2VzdGlvbnMYDiADKAkSFwoKcmVjZWlwdF9pZBgPIAEoA0gGiAEBEi8KDmZvcmVpZ25fYW1vdW50GBAgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXlIB4gBARIaCg1leGNoYW5nZV9yYXRlGBEgASgBSAiIAQESLgoKY3JlYXRlZF9hdBgSIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLgoKdXBkYXRlZF9hdBgTIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKQoIY2F0ZWdvcnkYFCABKAsyEi5hcmlhbi52MS5DYXRlZ29yeUgJiAEBEhkKDGFjY291bnRfbmFtZRgVIAEoCUgKiAEBQgsKCV9lbWFpbF9pZEIOCgxfZGVzY3JpcHRpb25CDgoMX2NhdGVnb3J5X2lkQgsKCV9tZXJjaGFudEINCgtfdXNlcl9ub3Rlc0IQCg5fYmFsYW5jZV9hZnRlckINCgtfcmVjZWlwdF9pZEIRCg9fZm9yZWlnbl9hbW91bnRCEAoOX2V4Y2hhbmdlX3JhdGVCCwoJX2NhdGVnb3J5Qg8KDV9hY2NvdW50X25hbWUiWgoUVHJhbnNhY3Rpb25XaXRoU2NvcmUSKgoLdHJhbnNhY3Rpb24YASABKAsyFS5hcmlhbi52MS5UcmFuc2FjdGlvbhIWCg5tZXJjaGFudF9zY29yZRgCIAEoASJgChlUcmFuc2FjdGlvbkNvdW50QnlBY2NvdW50EhIKCmFjY291bnRfaWQYASABKAMSFAoMYWNjb3VudF9uYW1lGAIgASgJEhkKEXRyYW5zYWN0aW9uX2NvdW50GAMgASgDYgZwcm90bzM", [file_arian_v1_category, file_arian_v1_enums, file_google_protobuf_timestamp, file_google_type_money]);

/**
 * @generated from message arian.v1.Transaction
 */
export type Transaction = Message<"arian.v1.Transaction"> & {
  /**
   * @generated from field: int64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp tx_date = 2;
   */
  txDate?: Timestamp;

  /**
   * @generated from field: google.type.Money tx_amount = 3;
   */
  txAmount?: Money;

  /**
   * @generated from field: arian.v1.TransactionDirection direction = 4;
   */
  direction: TransactionDirection;

  /**
   * @generated from field: int64 account_id = 5;
   */
  accountId: bigint;

  /**
   * metadata
   *
   * @generated from field: optional string email_id = 6;
   */
  emailId?: string;

  /**
   * @generated from field: optional string description = 7;
   */
  description?: string;

  /**
   * categorization
   *
   * @generated from field: optional int64 category_id = 9;
   */
  categoryId?: bigint;

  /**
   * @generated from field: arian.v1.CategorizationStatus categorization_status = 10;
   */
  categorizationStatus: CategorizationStatus;

  /**
   * merchant & notes
   *
   * @generated from field: optional string merchant = 11;
   */
  merchant?: string;

  /**
   * @generated from field: optional string user_notes = 12;
   */
  userNotes?: string;

  /**
   * balance after this tx
   *
   * @generated from field: optional google.type.Money balance_after = 13;
   */
  balanceAfter?: Money;

  /**
   * AI suggestions
   *
   * @generated from field: repeated string suggestions = 14;
   */
  suggestions: string[];

  /**
   * receipt linkage
   *
   * @generated from field: optional int64 receipt_id = 15;
   */
  receiptId?: bigint;

  /**
   * FX details
   *
   * @generated from field: optional google.type.Money foreign_amount = 16;
   */
  foreignAmount?: Money;

  /**
   * @generated from field: optional double exchange_rate = 17;
   */
  exchangeRate?: number;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 18;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 19;
   */
  updatedAt?: Timestamp;

  /**
   * additional fields for API responses
   *
   * @generated from field: optional arian.v1.Category category = 20;
   */
  category?: Category;

  /**
   * @generated from field: optional string account_name = 21;
   */
  accountName?: string;
};

/**
 * Describes the message arian.v1.Transaction.
 * Use `create(TransactionSchema)` to create a new message.
 */
export const TransactionSchema: GenMessage<Transaction> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction, 0);

/**
 * @generated from message arian.v1.TransactionWithScore
 */
export type TransactionWithScore = Message<"arian.v1.TransactionWithScore"> & {
  /**
   * @generated from field: arian.v1.Transaction transaction = 1;
   */
  transaction?: Transaction;

  /**
   * @generated from field: double merchant_score = 2;
   */
  merchantScore: number;
};

/**
 * Describes the message arian.v1.TransactionWithScore.
 * Use `create(TransactionWithScoreSchema)` to create a new message.
 */
export const TransactionWithScoreSchema: GenMessage<TransactionWithScore> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction, 1);

/**
 * @generated from message arian.v1.TransactionCountByAccount
 */
export type TransactionCountByAccount = Message<"arian.v1.TransactionCountByAccount"> & {
  /**
   * @generated from field: int64 account_id = 1;
   */
  accountId: bigint;

  /**
   * @generated from field: string account_name = 2;
   */
  accountName: string;

  /**
   * @generated from field: int64 transaction_count = 3;
   */
  transactionCount: bigint;
};

/**
 * Describes the message arian.v1.TransactionCountByAccount.
 * Use `create(TransactionCountByAccountSchema)` to create a new message.
 */
export const TransactionCountByAccountSchema: GenMessage<TransactionCountByAccount> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction, 2);

