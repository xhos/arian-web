// @generated by protoc-gen-es v2.6.3 with parameter "target=ts,import_extension=.js"
// @generated from file arian/v1/transaction_services.proto (package arian.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Cursor, TimeOfDay } from "./common_pb.js";
import { file_arian_v1_common } from "./common_pb.js";
import type { TransactionDirection } from "./enums_pb.js";
import { file_arian_v1_enums } from "./enums_pb.js";
import type { Transaction, TransactionCountByAccount, TransactionWithScore } from "./transaction_pb.js";
import { file_arian_v1_transaction } from "./transaction_pb.js";
import type { FieldMask, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_field_mask, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Money } from "../../google/type/money_pb.js";
import { file_google_type_money } from "../../google/type/money_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file arian/v1/transaction_services.proto.
 */
export const file_arian_v1_transaction_services: GenFile = /*@__PURE__*/
  fileDesc("CiNhcmlhbi92MS90cmFuc2FjdGlvbl9zZXJ2aWNlcy5wcm90bxIIYXJpYW4udjEiyQYKF0xpc3RUcmFuc2FjdGlvbnNSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkSFwoKYWNjb3VudF9pZBgCIAEoA0gAiAEBEhIKBWxpbWl0GAMgASgFSAGIAQESEwoGb2Zmc2V0GAQgASgFSAKIAQESMwoKc3RhcnRfZGF0ZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIA4gBARIxCghlbmRfZGF0ZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBIBIgBARIlCgZjdXJzb3IYByABKAsyEC5hcmlhbi52MS5DdXJzb3JIBYgBARIrCgphbW91bnRfbWluGAggASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXlIBogBARIrCgphbW91bnRfbWF4GAkgASgLMhIuZ29vZ2xlLnR5cGUuTW9uZXlIB4gBARI2CglkaXJlY3Rpb24YCiABKA4yHi5hcmlhbi52MS5UcmFuc2FjdGlvbkRpcmVjdGlvbkgIiAEBEhMKC2FjY291bnRfaWRzGAsgAygDEhIKCmNhdGVnb3JpZXMYDCADKAkSGwoObWVyY2hhbnRfcXVlcnkYDSABKAlICYgBARIeChFkZXNjcmlwdGlvbl9xdWVyeRgOIAEoCUgKiAEBEhUKCGN1cnJlbmN5GA8gASgJSAuIAQESMwoRdGltZV9vZl9kYXlfc3RhcnQYECABKAsyEy5hcmlhbi52MS5UaW1lT2ZEYXlIDIgBARIxCg90aW1lX29mX2RheV9lbmQYESABKAsyEy5hcmlhbi52MS5UaW1lT2ZEYXlIDYgBAUINCgtfYWNjb3VudF9pZEIICgZfbGltaXRCCQoHX29mZnNldEINCgtfc3RhcnRfZGF0ZUILCglfZW5kX2RhdGVCCQoHX2N1cnNvckINCgtfYW1vdW50X21pbkINCgtfYW1vdW50X21heEIMCgpfZGlyZWN0aW9uQhEKD19tZXJjaGFudF9xdWVyeUIUChJfZGVzY3JpcHRpb25fcXVlcnlCCwoJX2N1cnJlbmN5QhQKEl90aW1lX29mX2RheV9zdGFydEISChBfdGltZV9vZl9kYXlfZW5kIpgBChhMaXN0VHJhbnNhY3Rpb25zUmVzcG9uc2USKwoMdHJhbnNhY3Rpb25zGAEgAygLMhUuYXJpYW4udjEuVHJhbnNhY3Rpb24SEwoLdG90YWxfY291bnQYAiABKAMSKgoLbmV4dF9jdXJzb3IYAyABKAsyEC5hcmlhbi52MS5DdXJzb3JIAIgBAUIOCgxfbmV4dF9jdXJzb3IiNAoVR2V0VHJhbnNhY3Rpb25SZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkSCgoCaWQYAiABKAMiRAoWR2V0VHJhbnNhY3Rpb25SZXNwb25zZRIqCgt0cmFuc2FjdGlvbhgBIAEoCzIVLmFyaWFuLnYxLlRyYW5zYWN0aW9uItgDChhDcmVhdGVUcmFuc2FjdGlvblJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRISCgphY2NvdW50X2lkGAIgASgDEisKB3R4X2RhdGUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEiUKCXR4X2Ftb3VudBgEIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5EjEKCWRpcmVjdGlvbhgFIAEoDjIeLmFyaWFuLnYxLlRyYW5zYWN0aW9uRGlyZWN0aW9uEhgKC2Rlc2NyaXB0aW9uGAYgASgJSACIAQESFQoIbWVyY2hhbnQYByABKAlIAYgBARIXCgp1c2VyX25vdGVzGAggASgJSAKIAQESGAoLY2F0ZWdvcnlfaWQYCSABKANIA4gBARIvCg5mb3JlaWduX2Ftb3VudBgKIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5SASIAQESGgoNZXhjaGFuZ2VfcmF0ZRgLIAEoAUgFiAEBQg4KDF9kZXNjcmlwdGlvbkILCglfbWVyY2hhbnRCDQoLX3VzZXJfbm90ZXNCDgoMX2NhdGVnb3J5X2lkQhEKD19mb3JlaWduX2Ftb3VudEIQCg5fZXhjaGFuZ2VfcmF0ZSJHChlDcmVhdGVUcmFuc2FjdGlvblJlc3BvbnNlEioKC3RyYW5zYWN0aW9uGAEgASgLMhUuYXJpYW4udjEuVHJhbnNhY3Rpb24iuAQKGFVwZGF0ZVRyYW5zYWN0aW9uUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEgoKAmlkGAIgASgDEi8KC3VwZGF0ZV9tYXNrGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzaxIwCgd0eF9kYXRlGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgAiAEBEioKCXR4X2Ftb3VudBgFIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5SAGIAQESNgoJZGlyZWN0aW9uGAYgASgOMh4uYXJpYW4udjEuVHJhbnNhY3Rpb25EaXJlY3Rpb25IAogBARIYCgtkZXNjcmlwdGlvbhgHIAEoCUgDiAEBEhUKCG1lcmNoYW50GAggASgJSASIAQESFwoKdXNlcl9ub3RlcxgJIAEoCUgFiAEBEhgKC2NhdGVnb3J5X2lkGAogASgDSAaIAQESLwoOZm9yZWlnbl9hbW91bnQYCyABKAsyEi5nb29nbGUudHlwZS5Nb25leUgHiAEBEhoKDWV4Y2hhbmdlX3JhdGUYDCABKAFICIgBAUIKCghfdHhfZGF0ZUIMCgpfdHhfYW1vdW50QgwKCl9kaXJlY3Rpb25CDgoMX2Rlc2NyaXB0aW9uQgsKCV9tZXJjaGFudEINCgtfdXNlcl9ub3Rlc0IOCgxfY2F0ZWdvcnlfaWRCEQoPX2ZvcmVpZ25fYW1vdW50QhAKDl9leGNoYW5nZV9yYXRlIkcKGVVwZGF0ZVRyYW5zYWN0aW9uUmVzcG9uc2USKgoLdHJhbnNhY3Rpb24YASABKAsyFS5hcmlhbi52MS5UcmFuc2FjdGlvbiI3ChhEZWxldGVUcmFuc2FjdGlvblJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRIKCgJpZBgCIAEoAyIyChlEZWxldGVUcmFuc2FjdGlvblJlc3BvbnNlEhUKDWFmZmVjdGVkX3Jvd3MYASABKAMiXAocQ2F0ZWdvcml6ZVRyYW5zYWN0aW9uUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEhYKDnRyYW5zYWN0aW9uX2lkGAIgASgDEhMKC2NhdGVnb3J5X2lkGAMgASgDIksKHUNhdGVnb3JpemVUcmFuc2FjdGlvblJlc3BvbnNlEioKC3RyYW5zYWN0aW9uGAEgASgLMhUuYXJpYW4udjEuVHJhbnNhY3Rpb24iywEKGVNlYXJjaFRyYW5zYWN0aW9uc1JlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRINCgVxdWVyeRgCIAEoCRIXCgphY2NvdW50X2lkGAMgASgDSACIAQESGAoLY2F0ZWdvcnlfaWQYBCABKANIAYgBARISCgVsaW1pdBgFIAEoBUgCiAEBEhMKBm9mZnNldBgGIAEoBUgDiAEBQg0KC19hY2NvdW50X2lkQg4KDF9jYXRlZ29yeV9pZEIICgZfbGltaXRCCQoHX29mZnNldCJnChpTZWFyY2hUcmFuc2FjdGlvbnNSZXNwb25zZRI0Cgx0cmFuc2FjdGlvbnMYASADKAsyHi5hcmlhbi52MS5UcmFuc2FjdGlvbldpdGhTY29yZRITCgt0b3RhbF9jb3VudBgCIAEoAyK6AgofR2V0VHJhbnNhY3Rpb25zQnlBY2NvdW50UmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEhIKCmFjY291bnRfaWQYAiABKAMSEgoFbGltaXQYAyABKAVIAIgBARITCgZvZmZzZXQYBCABKAVIAYgBARIzCgpzdGFydF9kYXRlGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgCiAEBEjEKCGVuZF9kYXRlGAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEgDiAEBEiUKBmN1cnNvchgHIAEoCzIQLmFyaWFuLnYxLkN1cnNvckgEiAEBQggKBl9saW1pdEIJCgdfb2Zmc2V0Qg0KC19zdGFydF9kYXRlQgsKCV9lbmRfZGF0ZUIJCgdfY3Vyc29yIqABCiBHZXRUcmFuc2FjdGlvbnNCeUFjY291bnRSZXNwb25zZRIrCgx0cmFuc2FjdGlvbnMYASADKAsyFS5hcmlhbi52MS5UcmFuc2FjdGlvbhITCgt0b3RhbF9jb3VudBgCIAEoAxIqCgtuZXh0X2N1cnNvchgDIAEoCzIQLmFyaWFuLnYxLkN1cnNvckgAiAEBQg4KDF9uZXh0X2N1cnNvciLOAQojR2V0VW5jYXRlZ29yaXplZFRyYW5zYWN0aW9uc1JlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRIXCgphY2NvdW50X2lkGAIgASgDSACIAQESEgoFbGltaXQYAyABKAVIAYgBARITCgZvZmZzZXQYBCABKAVIAogBARIlCgZjdXJzb3IYBSABKAsyEC5hcmlhbi52MS5DdXJzb3JIA4gBAUINCgtfYWNjb3VudF9pZEIICgZfbGltaXRCCQoHX29mZnNldEIJCgdfY3Vyc29yIqQBCiRHZXRVbmNhdGVnb3JpemVkVHJhbnNhY3Rpb25zUmVzcG9uc2USKwoMdHJhbnNhY3Rpb25zGAEgAygLMhUuYXJpYW4udjEuVHJhbnNhY3Rpb24SEwoLdG90YWxfY291bnQYAiABKAMSKgoLbmV4dF9jdXJzb3IYAyABKAsyEC5hcmlhbi52MS5DdXJzb3JIAIgBAUIOCgxfbmV4dF9jdXJzb3IiYgohQnVsa0NhdGVnb3JpemVUcmFuc2FjdGlvbnNSZXF1ZXN0Eg8KB3VzZXJfaWQYASABKAkSFwoPdHJhbnNhY3Rpb25faWRzGAIgAygDEhMKC2NhdGVnb3J5X2lkGAMgASgDIjsKIkJ1bGtDYXRlZ29yaXplVHJhbnNhY3Rpb25zUmVzcG9uc2USFQoNYWZmZWN0ZWRfcm93cxgBIAEoAyJJCh1CdWxrRGVsZXRlVHJhbnNhY3Rpb25zUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEhcKD3RyYW5zYWN0aW9uX2lkcxgCIAMoAyI3Ch5CdWxrRGVsZXRlVHJhbnNhY3Rpb25zUmVzcG9uc2USFQoNYWZmZWN0ZWRfcm93cxgBIAEoAyI2CiNHZXRUcmFuc2FjdGlvbkNvdW50QnlBY2NvdW50UmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJIlsKJEdldFRyYW5zYWN0aW9uQ291bnRCeUFjY291bnRSZXNwb25zZRIzCgZjb3VudHMYASADKAsyIy5hcmlhbi52MS5UcmFuc2FjdGlvbkNvdW50QnlBY2NvdW50IqIBCiBGaW5kQ2FuZGlkYXRlVHJhbnNhY3Rpb25zUmVxdWVzdBIPCgd1c2VyX2lkGAEgASgJEhAKCG1lcmNoYW50GAIgASgJEjEKDXB1cmNoYXNlX2RhdGUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEigKDHRvdGFsX2Ftb3VudBgEIAEoCzISLmdvb2dsZS50eXBlLk1vbmV5IlcKIUZpbmRDYW5kaWRhdGVUcmFuc2FjdGlvbnNSZXNwb25zZRIyCgpjYW5kaWRhdGVzGAEgAygLMh4uYXJpYW4udjEuVHJhbnNhY3Rpb25XaXRoU2NvcmUiQgoXSWRlbnRpZnlNZXJjaGFudFJlcXVlc3QSDwoHdXNlcl9pZBgBIAEoCRIWCg50cmFuc2FjdGlvbl9pZBgCIAEoAyIsChhJZGVudGlmeU1lcmNoYW50UmVzcG9uc2USEAoIbWVyY2hhbnQYASABKAkiSgocU2V0VHJhbnNhY3Rpb25SZWNlaXB0UmVxdWVzdBIWCg50cmFuc2FjdGlvbl9pZBgBIAEoAxISCgpyZWNlaXB0X2lkGAIgASgDIjYKHVNldFRyYW5zYWN0aW9uUmVjZWlwdFJlc3BvbnNlEhUKDWFmZmVjdGVkX3Jvd3MYASABKAMyuwwKElRyYW5zYWN0aW9uU2VydmljZRJZChBMaXN0VHJhbnNhY3Rpb25zEiEuYXJpYW4udjEuTGlzdFRyYW5zYWN0aW9uc1JlcXVlc3QaIi5hcmlhbi52MS5MaXN0VHJhbnNhY3Rpb25zUmVzcG9uc2USUwoOR2V0VHJhbnNhY3Rpb24SHy5hcmlhbi52MS5HZXRUcmFuc2FjdGlvblJlcXVlc3QaIC5hcmlhbi52MS5HZXRUcmFuc2FjdGlvblJlc3BvbnNlElwKEUNyZWF0ZVRyYW5zYWN0aW9uEiIuYXJpYW4udjEuQ3JlYXRlVHJhbnNhY3Rpb25SZXF1ZXN0GiMuYXJpYW4udjEuQ3JlYXRlVHJhbnNhY3Rpb25SZXNwb25zZRJcChFVcGRhdGVUcmFuc2FjdGlvbhIiLmFyaWFuLnYxLlVwZGF0ZVRyYW5zYWN0aW9uUmVxdWVzdBojLmFyaWFuLnYxLlVwZGF0ZVRyYW5zYWN0aW9uUmVzcG9uc2USXAoRRGVsZXRlVHJhbnNhY3Rpb24SIi5hcmlhbi52MS5EZWxldGVUcmFuc2FjdGlvblJlcXVlc3QaIy5hcmlhbi52MS5EZWxldGVUcmFuc2FjdGlvblJlc3BvbnNlEmsKFkJ1bGtEZWxldGVUcmFuc2FjdGlvbnMSJy5hcmlhbi52MS5CdWxrRGVsZXRlVHJhbnNhY3Rpb25zUmVxdWVzdBooLmFyaWFuLnYxLkJ1bGtEZWxldGVUcmFuc2FjdGlvbnNSZXNwb25zZRJoChVDYXRlZ29yaXplVHJhbnNhY3Rpb24SJi5hcmlhbi52MS5DYXRlZ29yaXplVHJhbnNhY3Rpb25SZXF1ZXN0GicuYXJpYW4udjEuQ2F0ZWdvcml6ZVRyYW5zYWN0aW9uUmVzcG9uc2USXwoSU2VhcmNoVHJhbnNhY3Rpb25zEiMuYXJpYW4udjEuU2VhcmNoVHJhbnNhY3Rpb25zUmVxdWVzdBokLmFyaWFuLnYxLlNlYXJjaFRyYW5zYWN0aW9uc1Jlc3BvbnNlEnEKGEdldFRyYW5zYWN0aW9uc0J5QWNjb3VudBIpLmFyaWFuLnYxLkdldFRyYW5zYWN0aW9uc0J5QWNjb3VudFJlcXVlc3QaKi5hcmlhbi52MS5HZXRUcmFuc2FjdGlvbnNCeUFjY291bnRSZXNwb25zZRJ9ChxHZXRVbmNhdGVnb3JpemVkVHJhbnNhY3Rpb25zEi0uYXJpYW4udjEuR2V0VW5jYXRlZ29yaXplZFRyYW5zYWN0aW9uc1JlcXVlc3QaLi5hcmlhbi52MS5HZXRVbmNhdGVnb3JpemVkVHJhbnNhY3Rpb25zUmVzcG9uc2USdwoaQnVsa0NhdGVnb3JpemVUcmFuc2FjdGlvbnMSKy5hcmlhbi52MS5CdWxrQ2F0ZWdvcml6ZVRyYW5zYWN0aW9uc1JlcXVlc3QaLC5hcmlhbi52MS5CdWxrQ2F0ZWdvcml6ZVRyYW5zYWN0aW9uc1Jlc3BvbnNlEn0KHEdldFRyYW5zYWN0aW9uQ291bnRCeUFjY291bnQSLS5hcmlhbi52MS5HZXRUcmFuc2FjdGlvbkNvdW50QnlBY2NvdW50UmVxdWVzdBouLmFyaWFuLnYxLkdldFRyYW5zYWN0aW9uQ291bnRCeUFjY291bnRSZXNwb25zZRJ0ChlGaW5kQ2FuZGlkYXRlVHJhbnNhY3Rpb25zEiouYXJpYW4udjEuRmluZENhbmRpZGF0ZVRyYW5zYWN0aW9uc1JlcXVlc3QaKy5hcmlhbi52MS5GaW5kQ2FuZGlkYXRlVHJhbnNhY3Rpb25zUmVzcG9uc2USWQoQSWRlbnRpZnlNZXJjaGFudBIhLmFyaWFuLnYxLklkZW50aWZ5TWVyY2hhbnRSZXF1ZXN0GiIuYXJpYW4udjEuSWRlbnRpZnlNZXJjaGFudFJlc3BvbnNlEmgKFVNldFRyYW5zYWN0aW9uUmVjZWlwdBImLmFyaWFuLnYxLlNldFRyYW5zYWN0aW9uUmVjZWlwdFJlcXVlc3QaJy5hcmlhbi52MS5TZXRUcmFuc2FjdGlvblJlY2VpcHRSZXNwb25zZWIGcHJvdG8z", [file_arian_v1_common, file_arian_v1_enums, file_arian_v1_transaction, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_type_money]);

/**
 * @generated from message arian.v1.ListTransactionsRequest
 */
export type ListTransactionsRequest = Message<"arian.v1.ListTransactionsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional int64 account_id = 2;
   */
  accountId?: bigint;

  /**
   * @generated from field: optional int32 limit = 3;
   */
  limit?: number;

  /**
   * @generated from field: optional int32 offset = 4;
   */
  offset?: number;

  /**
   * @generated from field: optional google.protobuf.Timestamp start_date = 5;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp end_date = 6;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: optional arian.v1.Cursor cursor = 7;
   */
  cursor?: Cursor;

  /**
   * @generated from field: optional google.type.Money amount_min = 8;
   */
  amountMin?: Money;

  /**
   * @generated from field: optional google.type.Money amount_max = 9;
   */
  amountMax?: Money;

  /**
   * @generated from field: optional arian.v1.TransactionDirection direction = 10;
   */
  direction?: TransactionDirection;

  /**
   * @generated from field: repeated int64 account_ids = 11;
   */
  accountIds: bigint[];

  /**
   * @generated from field: repeated string categories = 12;
   */
  categories: string[];

  /**
   * @generated from field: optional string merchant_query = 13;
   */
  merchantQuery?: string;

  /**
   * @generated from field: optional string description_query = 14;
   */
  descriptionQuery?: string;

  /**
   * @generated from field: optional string currency = 15;
   */
  currency?: string;

  /**
   * @generated from field: optional arian.v1.TimeOfDay time_of_day_start = 16;
   */
  timeOfDayStart?: TimeOfDay;

  /**
   * @generated from field: optional arian.v1.TimeOfDay time_of_day_end = 17;
   */
  timeOfDayEnd?: TimeOfDay;
};

/**
 * Describes the message arian.v1.ListTransactionsRequest.
 * Use `create(ListTransactionsRequestSchema)` to create a new message.
 */
export const ListTransactionsRequestSchema: GenMessage<ListTransactionsRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 0);

/**
 * @generated from message arian.v1.ListTransactionsResponse
 */
export type ListTransactionsResponse = Message<"arian.v1.ListTransactionsResponse"> & {
  /**
   * @generated from field: repeated arian.v1.Transaction transactions = 1;
   */
  transactions: Transaction[];

  /**
   * @generated from field: int64 total_count = 2;
   */
  totalCount: bigint;

  /**
   * @generated from field: optional arian.v1.Cursor next_cursor = 3;
   */
  nextCursor?: Cursor;
};

/**
 * Describes the message arian.v1.ListTransactionsResponse.
 * Use `create(ListTransactionsResponseSchema)` to create a new message.
 */
export const ListTransactionsResponseSchema: GenMessage<ListTransactionsResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 1);

/**
 * @generated from message arian.v1.GetTransactionRequest
 */
export type GetTransactionRequest = Message<"arian.v1.GetTransactionRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int64 id = 2;
   */
  id: bigint;
};

/**
 * Describes the message arian.v1.GetTransactionRequest.
 * Use `create(GetTransactionRequestSchema)` to create a new message.
 */
export const GetTransactionRequestSchema: GenMessage<GetTransactionRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 2);

/**
 * @generated from message arian.v1.GetTransactionResponse
 */
export type GetTransactionResponse = Message<"arian.v1.GetTransactionResponse"> & {
  /**
   * @generated from field: arian.v1.Transaction transaction = 1;
   */
  transaction?: Transaction;
};

/**
 * Describes the message arian.v1.GetTransactionResponse.
 * Use `create(GetTransactionResponseSchema)` to create a new message.
 */
export const GetTransactionResponseSchema: GenMessage<GetTransactionResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 3);

/**
 * @generated from message arian.v1.CreateTransactionRequest
 */
export type CreateTransactionRequest = Message<"arian.v1.CreateTransactionRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int64 account_id = 2;
   */
  accountId: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp tx_date = 3;
   */
  txDate?: Timestamp;

  /**
   * @generated from field: google.type.Money tx_amount = 4;
   */
  txAmount?: Money;

  /**
   * @generated from field: arian.v1.TransactionDirection direction = 5;
   */
  direction: TransactionDirection;

  /**
   * @generated from field: optional string description = 6;
   */
  description?: string;

  /**
   * @generated from field: optional string merchant = 7;
   */
  merchant?: string;

  /**
   * @generated from field: optional string user_notes = 8;
   */
  userNotes?: string;

  /**
   * @generated from field: optional int64 category_id = 9;
   */
  categoryId?: bigint;

  /**
   * @generated from field: optional google.type.Money foreign_amount = 10;
   */
  foreignAmount?: Money;

  /**
   * @generated from field: optional double exchange_rate = 11;
   */
  exchangeRate?: number;
};

/**
 * Describes the message arian.v1.CreateTransactionRequest.
 * Use `create(CreateTransactionRequestSchema)` to create a new message.
 */
export const CreateTransactionRequestSchema: GenMessage<CreateTransactionRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 4);

/**
 * @generated from message arian.v1.CreateTransactionResponse
 */
export type CreateTransactionResponse = Message<"arian.v1.CreateTransactionResponse"> & {
  /**
   * @generated from field: arian.v1.Transaction transaction = 1;
   */
  transaction?: Transaction;
};

/**
 * Describes the message arian.v1.CreateTransactionResponse.
 * Use `create(CreateTransactionResponseSchema)` to create a new message.
 */
export const CreateTransactionResponseSchema: GenMessage<CreateTransactionResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 5);

/**
 * @generated from message arian.v1.UpdateTransactionRequest
 */
export type UpdateTransactionRequest = Message<"arian.v1.UpdateTransactionRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int64 id = 2;
   */
  id: bigint;

  /**
   * @generated from field: google.protobuf.FieldMask update_mask = 3;
   */
  updateMask?: FieldMask;

  /**
   * @generated from field: optional google.protobuf.Timestamp tx_date = 4;
   */
  txDate?: Timestamp;

  /**
   * @generated from field: optional google.type.Money tx_amount = 5;
   */
  txAmount?: Money;

  /**
   * @generated from field: optional arian.v1.TransactionDirection direction = 6;
   */
  direction?: TransactionDirection;

  /**
   * @generated from field: optional string description = 7;
   */
  description?: string;

  /**
   * @generated from field: optional string merchant = 8;
   */
  merchant?: string;

  /**
   * @generated from field: optional string user_notes = 9;
   */
  userNotes?: string;

  /**
   * @generated from field: optional int64 category_id = 10;
   */
  categoryId?: bigint;

  /**
   * @generated from field: optional google.type.Money foreign_amount = 11;
   */
  foreignAmount?: Money;

  /**
   * @generated from field: optional double exchange_rate = 12;
   */
  exchangeRate?: number;
};

/**
 * Describes the message arian.v1.UpdateTransactionRequest.
 * Use `create(UpdateTransactionRequestSchema)` to create a new message.
 */
export const UpdateTransactionRequestSchema: GenMessage<UpdateTransactionRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 6);

/**
 * @generated from message arian.v1.UpdateTransactionResponse
 */
export type UpdateTransactionResponse = Message<"arian.v1.UpdateTransactionResponse"> & {
  /**
   * @generated from field: arian.v1.Transaction transaction = 1;
   */
  transaction?: Transaction;
};

/**
 * Describes the message arian.v1.UpdateTransactionResponse.
 * Use `create(UpdateTransactionResponseSchema)` to create a new message.
 */
export const UpdateTransactionResponseSchema: GenMessage<UpdateTransactionResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 7);

/**
 * @generated from message arian.v1.DeleteTransactionRequest
 */
export type DeleteTransactionRequest = Message<"arian.v1.DeleteTransactionRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int64 id = 2;
   */
  id: bigint;
};

/**
 * Describes the message arian.v1.DeleteTransactionRequest.
 * Use `create(DeleteTransactionRequestSchema)` to create a new message.
 */
export const DeleteTransactionRequestSchema: GenMessage<DeleteTransactionRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 8);

/**
 * @generated from message arian.v1.DeleteTransactionResponse
 */
export type DeleteTransactionResponse = Message<"arian.v1.DeleteTransactionResponse"> & {
  /**
   * @generated from field: int64 affected_rows = 1;
   */
  affectedRows: bigint;
};

/**
 * Describes the message arian.v1.DeleteTransactionResponse.
 * Use `create(DeleteTransactionResponseSchema)` to create a new message.
 */
export const DeleteTransactionResponseSchema: GenMessage<DeleteTransactionResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 9);

/**
 * @generated from message arian.v1.CategorizeTransactionRequest
 */
export type CategorizeTransactionRequest = Message<"arian.v1.CategorizeTransactionRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int64 transaction_id = 2;
   */
  transactionId: bigint;

  /**
   * @generated from field: int64 category_id = 3;
   */
  categoryId: bigint;
};

/**
 * Describes the message arian.v1.CategorizeTransactionRequest.
 * Use `create(CategorizeTransactionRequestSchema)` to create a new message.
 */
export const CategorizeTransactionRequestSchema: GenMessage<CategorizeTransactionRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 10);

/**
 * @generated from message arian.v1.CategorizeTransactionResponse
 */
export type CategorizeTransactionResponse = Message<"arian.v1.CategorizeTransactionResponse"> & {
  /**
   * @generated from field: arian.v1.Transaction transaction = 1;
   */
  transaction?: Transaction;
};

/**
 * Describes the message arian.v1.CategorizeTransactionResponse.
 * Use `create(CategorizeTransactionResponseSchema)` to create a new message.
 */
export const CategorizeTransactionResponseSchema: GenMessage<CategorizeTransactionResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 11);

/**
 * @generated from message arian.v1.SearchTransactionsRequest
 */
export type SearchTransactionsRequest = Message<"arian.v1.SearchTransactionsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * @generated from field: optional int64 account_id = 3;
   */
  accountId?: bigint;

  /**
   * @generated from field: optional int64 category_id = 4;
   */
  categoryId?: bigint;

  /**
   * @generated from field: optional int32 limit = 5;
   */
  limit?: number;

  /**
   * @generated from field: optional int32 offset = 6;
   */
  offset?: number;
};

/**
 * Describes the message arian.v1.SearchTransactionsRequest.
 * Use `create(SearchTransactionsRequestSchema)` to create a new message.
 */
export const SearchTransactionsRequestSchema: GenMessage<SearchTransactionsRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 12);

/**
 * @generated from message arian.v1.SearchTransactionsResponse
 */
export type SearchTransactionsResponse = Message<"arian.v1.SearchTransactionsResponse"> & {
  /**
   * @generated from field: repeated arian.v1.TransactionWithScore transactions = 1;
   */
  transactions: TransactionWithScore[];

  /**
   * @generated from field: int64 total_count = 2;
   */
  totalCount: bigint;
};

/**
 * Describes the message arian.v1.SearchTransactionsResponse.
 * Use `create(SearchTransactionsResponseSchema)` to create a new message.
 */
export const SearchTransactionsResponseSchema: GenMessage<SearchTransactionsResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 13);

/**
 * @generated from message arian.v1.GetTransactionsByAccountRequest
 */
export type GetTransactionsByAccountRequest = Message<"arian.v1.GetTransactionsByAccountRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int64 account_id = 2;
   */
  accountId: bigint;

  /**
   * @generated from field: optional int32 limit = 3;
   */
  limit?: number;

  /**
   * @generated from field: optional int32 offset = 4;
   */
  offset?: number;

  /**
   * @generated from field: optional google.protobuf.Timestamp start_date = 5;
   */
  startDate?: Timestamp;

  /**
   * @generated from field: optional google.protobuf.Timestamp end_date = 6;
   */
  endDate?: Timestamp;

  /**
   * @generated from field: optional arian.v1.Cursor cursor = 7;
   */
  cursor?: Cursor;
};

/**
 * Describes the message arian.v1.GetTransactionsByAccountRequest.
 * Use `create(GetTransactionsByAccountRequestSchema)` to create a new message.
 */
export const GetTransactionsByAccountRequestSchema: GenMessage<GetTransactionsByAccountRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 14);

/**
 * @generated from message arian.v1.GetTransactionsByAccountResponse
 */
export type GetTransactionsByAccountResponse = Message<"arian.v1.GetTransactionsByAccountResponse"> & {
  /**
   * @generated from field: repeated arian.v1.Transaction transactions = 1;
   */
  transactions: Transaction[];

  /**
   * @generated from field: int64 total_count = 2;
   */
  totalCount: bigint;

  /**
   * @generated from field: optional arian.v1.Cursor next_cursor = 3;
   */
  nextCursor?: Cursor;
};

/**
 * Describes the message arian.v1.GetTransactionsByAccountResponse.
 * Use `create(GetTransactionsByAccountResponseSchema)` to create a new message.
 */
export const GetTransactionsByAccountResponseSchema: GenMessage<GetTransactionsByAccountResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 15);

/**
 * @generated from message arian.v1.GetUncategorizedTransactionsRequest
 */
export type GetUncategorizedTransactionsRequest = Message<"arian.v1.GetUncategorizedTransactionsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: optional int64 account_id = 2;
   */
  accountId?: bigint;

  /**
   * @generated from field: optional int32 limit = 3;
   */
  limit?: number;

  /**
   * @generated from field: optional int32 offset = 4;
   */
  offset?: number;

  /**
   * @generated from field: optional arian.v1.Cursor cursor = 5;
   */
  cursor?: Cursor;
};

/**
 * Describes the message arian.v1.GetUncategorizedTransactionsRequest.
 * Use `create(GetUncategorizedTransactionsRequestSchema)` to create a new message.
 */
export const GetUncategorizedTransactionsRequestSchema: GenMessage<GetUncategorizedTransactionsRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 16);

/**
 * @generated from message arian.v1.GetUncategorizedTransactionsResponse
 */
export type GetUncategorizedTransactionsResponse = Message<"arian.v1.GetUncategorizedTransactionsResponse"> & {
  /**
   * @generated from field: repeated arian.v1.Transaction transactions = 1;
   */
  transactions: Transaction[];

  /**
   * @generated from field: int64 total_count = 2;
   */
  totalCount: bigint;

  /**
   * @generated from field: optional arian.v1.Cursor next_cursor = 3;
   */
  nextCursor?: Cursor;
};

/**
 * Describes the message arian.v1.GetUncategorizedTransactionsResponse.
 * Use `create(GetUncategorizedTransactionsResponseSchema)` to create a new message.
 */
export const GetUncategorizedTransactionsResponseSchema: GenMessage<GetUncategorizedTransactionsResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 17);

/**
 * @generated from message arian.v1.BulkCategorizeTransactionsRequest
 */
export type BulkCategorizeTransactionsRequest = Message<"arian.v1.BulkCategorizeTransactionsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: repeated int64 transaction_ids = 2;
   */
  transactionIds: bigint[];

  /**
   * @generated from field: int64 category_id = 3;
   */
  categoryId: bigint;
};

/**
 * Describes the message arian.v1.BulkCategorizeTransactionsRequest.
 * Use `create(BulkCategorizeTransactionsRequestSchema)` to create a new message.
 */
export const BulkCategorizeTransactionsRequestSchema: GenMessage<BulkCategorizeTransactionsRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 18);

/**
 * @generated from message arian.v1.BulkCategorizeTransactionsResponse
 */
export type BulkCategorizeTransactionsResponse = Message<"arian.v1.BulkCategorizeTransactionsResponse"> & {
  /**
   * @generated from field: int64 affected_rows = 1;
   */
  affectedRows: bigint;
};

/**
 * Describes the message arian.v1.BulkCategorizeTransactionsResponse.
 * Use `create(BulkCategorizeTransactionsResponseSchema)` to create a new message.
 */
export const BulkCategorizeTransactionsResponseSchema: GenMessage<BulkCategorizeTransactionsResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 19);

/**
 * @generated from message arian.v1.BulkDeleteTransactionsRequest
 */
export type BulkDeleteTransactionsRequest = Message<"arian.v1.BulkDeleteTransactionsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: repeated int64 transaction_ids = 2;
   */
  transactionIds: bigint[];
};

/**
 * Describes the message arian.v1.BulkDeleteTransactionsRequest.
 * Use `create(BulkDeleteTransactionsRequestSchema)` to create a new message.
 */
export const BulkDeleteTransactionsRequestSchema: GenMessage<BulkDeleteTransactionsRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 20);

/**
 * @generated from message arian.v1.BulkDeleteTransactionsResponse
 */
export type BulkDeleteTransactionsResponse = Message<"arian.v1.BulkDeleteTransactionsResponse"> & {
  /**
   * @generated from field: int64 affected_rows = 1;
   */
  affectedRows: bigint;
};

/**
 * Describes the message arian.v1.BulkDeleteTransactionsResponse.
 * Use `create(BulkDeleteTransactionsResponseSchema)` to create a new message.
 */
export const BulkDeleteTransactionsResponseSchema: GenMessage<BulkDeleteTransactionsResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 21);

/**
 * @generated from message arian.v1.GetTransactionCountByAccountRequest
 */
export type GetTransactionCountByAccountRequest = Message<"arian.v1.GetTransactionCountByAccountRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;
};

/**
 * Describes the message arian.v1.GetTransactionCountByAccountRequest.
 * Use `create(GetTransactionCountByAccountRequestSchema)` to create a new message.
 */
export const GetTransactionCountByAccountRequestSchema: GenMessage<GetTransactionCountByAccountRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 22);

/**
 * @generated from message arian.v1.GetTransactionCountByAccountResponse
 */
export type GetTransactionCountByAccountResponse = Message<"arian.v1.GetTransactionCountByAccountResponse"> & {
  /**
   * @generated from field: repeated arian.v1.TransactionCountByAccount counts = 1;
   */
  counts: TransactionCountByAccount[];
};

/**
 * Describes the message arian.v1.GetTransactionCountByAccountResponse.
 * Use `create(GetTransactionCountByAccountResponseSchema)` to create a new message.
 */
export const GetTransactionCountByAccountResponseSchema: GenMessage<GetTransactionCountByAccountResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 23);

/**
 * @generated from message arian.v1.FindCandidateTransactionsRequest
 */
export type FindCandidateTransactionsRequest = Message<"arian.v1.FindCandidateTransactionsRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string merchant = 2;
   */
  merchant: string;

  /**
   * @generated from field: google.protobuf.Timestamp purchase_date = 3;
   */
  purchaseDate?: Timestamp;

  /**
   * @generated from field: google.type.Money total_amount = 4;
   */
  totalAmount?: Money;
};

/**
 * Describes the message arian.v1.FindCandidateTransactionsRequest.
 * Use `create(FindCandidateTransactionsRequestSchema)` to create a new message.
 */
export const FindCandidateTransactionsRequestSchema: GenMessage<FindCandidateTransactionsRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 24);

/**
 * @generated from message arian.v1.FindCandidateTransactionsResponse
 */
export type FindCandidateTransactionsResponse = Message<"arian.v1.FindCandidateTransactionsResponse"> & {
  /**
   * @generated from field: repeated arian.v1.TransactionWithScore candidates = 1;
   */
  candidates: TransactionWithScore[];
};

/**
 * Describes the message arian.v1.FindCandidateTransactionsResponse.
 * Use `create(FindCandidateTransactionsResponseSchema)` to create a new message.
 */
export const FindCandidateTransactionsResponseSchema: GenMessage<FindCandidateTransactionsResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 25);

/**
 * @generated from message arian.v1.IdentifyMerchantRequest
 */
export type IdentifyMerchantRequest = Message<"arian.v1.IdentifyMerchantRequest"> & {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: int64 transaction_id = 2;
   */
  transactionId: bigint;
};

/**
 * Describes the message arian.v1.IdentifyMerchantRequest.
 * Use `create(IdentifyMerchantRequestSchema)` to create a new message.
 */
export const IdentifyMerchantRequestSchema: GenMessage<IdentifyMerchantRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 26);

/**
 * @generated from message arian.v1.IdentifyMerchantResponse
 */
export type IdentifyMerchantResponse = Message<"arian.v1.IdentifyMerchantResponse"> & {
  /**
   * @generated from field: string merchant = 1;
   */
  merchant: string;
};

/**
 * Describes the message arian.v1.IdentifyMerchantResponse.
 * Use `create(IdentifyMerchantResponseSchema)` to create a new message.
 */
export const IdentifyMerchantResponseSchema: GenMessage<IdentifyMerchantResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 27);

/**
 * @generated from message arian.v1.SetTransactionReceiptRequest
 */
export type SetTransactionReceiptRequest = Message<"arian.v1.SetTransactionReceiptRequest"> & {
  /**
   * @generated from field: int64 transaction_id = 1;
   */
  transactionId: bigint;

  /**
   * @generated from field: int64 receipt_id = 2;
   */
  receiptId: bigint;
};

/**
 * Describes the message arian.v1.SetTransactionReceiptRequest.
 * Use `create(SetTransactionReceiptRequestSchema)` to create a new message.
 */
export const SetTransactionReceiptRequestSchema: GenMessage<SetTransactionReceiptRequest> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 28);

/**
 * @generated from message arian.v1.SetTransactionReceiptResponse
 */
export type SetTransactionReceiptResponse = Message<"arian.v1.SetTransactionReceiptResponse"> & {
  /**
   * @generated from field: int64 affected_rows = 1;
   */
  affectedRows: bigint;
};

/**
 * Describes the message arian.v1.SetTransactionReceiptResponse.
 * Use `create(SetTransactionReceiptResponseSchema)` to create a new message.
 */
export const SetTransactionReceiptResponseSchema: GenMessage<SetTransactionReceiptResponse> = /*@__PURE__*/
  messageDesc(file_arian_v1_transaction_services, 29);

/**
 * @generated from service arian.v1.TransactionService
 */
export const TransactionService: GenService<{
  /**
   * @generated from rpc arian.v1.TransactionService.ListTransactions
   */
  listTransactions: {
    methodKind: "unary";
    input: typeof ListTransactionsRequestSchema;
    output: typeof ListTransactionsResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.GetTransaction
   */
  getTransaction: {
    methodKind: "unary";
    input: typeof GetTransactionRequestSchema;
    output: typeof GetTransactionResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.CreateTransaction
   */
  createTransaction: {
    methodKind: "unary";
    input: typeof CreateTransactionRequestSchema;
    output: typeof CreateTransactionResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.UpdateTransaction
   */
  updateTransaction: {
    methodKind: "unary";
    input: typeof UpdateTransactionRequestSchema;
    output: typeof UpdateTransactionResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.DeleteTransaction
   */
  deleteTransaction: {
    methodKind: "unary";
    input: typeof DeleteTransactionRequestSchema;
    output: typeof DeleteTransactionResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.BulkDeleteTransactions
   */
  bulkDeleteTransactions: {
    methodKind: "unary";
    input: typeof BulkDeleteTransactionsRequestSchema;
    output: typeof BulkDeleteTransactionsResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.CategorizeTransaction
   */
  categorizeTransaction: {
    methodKind: "unary";
    input: typeof CategorizeTransactionRequestSchema;
    output: typeof CategorizeTransactionResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.SearchTransactions
   */
  searchTransactions: {
    methodKind: "unary";
    input: typeof SearchTransactionsRequestSchema;
    output: typeof SearchTransactionsResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.GetTransactionsByAccount
   */
  getTransactionsByAccount: {
    methodKind: "unary";
    input: typeof GetTransactionsByAccountRequestSchema;
    output: typeof GetTransactionsByAccountResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.GetUncategorizedTransactions
   */
  getUncategorizedTransactions: {
    methodKind: "unary";
    input: typeof GetUncategorizedTransactionsRequestSchema;
    output: typeof GetUncategorizedTransactionsResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.BulkCategorizeTransactions
   */
  bulkCategorizeTransactions: {
    methodKind: "unary";
    input: typeof BulkCategorizeTransactionsRequestSchema;
    output: typeof BulkCategorizeTransactionsResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.GetTransactionCountByAccount
   */
  getTransactionCountByAccount: {
    methodKind: "unary";
    input: typeof GetTransactionCountByAccountRequestSchema;
    output: typeof GetTransactionCountByAccountResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.FindCandidateTransactions
   */
  findCandidateTransactions: {
    methodKind: "unary";
    input: typeof FindCandidateTransactionsRequestSchema;
    output: typeof FindCandidateTransactionsResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.IdentifyMerchant
   */
  identifyMerchant: {
    methodKind: "unary";
    input: typeof IdentifyMerchantRequestSchema;
    output: typeof IdentifyMerchantResponseSchema;
  },
  /**
   * @generated from rpc arian.v1.TransactionService.SetTransactionReceipt
   */
  setTransactionReceipt: {
    methodKind: "unary";
    input: typeof SetTransactionReceiptRequestSchema;
    output: typeof SetTransactionReceiptResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_arian_v1_transaction_services, 0);

